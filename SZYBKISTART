# üöÄ Szybki Start - System Logistyki Militarnej

## 1. Instalacja z npm

```bash
# Sklonuj repozytorium
git clone https://github.com/your-org/military-logistics-system.git
cd military-logistics-system

# Zainstaluj zale≈ºno≈õci
npm install

# Skopiuj i skonfiguruj zmienne ≈õrodowiskowe
cp .env.example .env

# Edytuj .env i dodaj sw√≥j Google Maps API Key
# REACT_APP_GOOGLE_MAPS_API_KEY=your_api_key_here

# Uruchom aplikacjƒô w trybie development
npm start
```

Aplikacja bƒôdzie dostƒôpna pod adresem: http://localhost:3000

## 2. Instalacja z Docker

```bash
# Sklonuj repozytorium
git clone https://github.com/your-org/military-logistics-system.git
cd military-logistics-system

# Uruchom za pomocƒÖ Docker Compose
docker-compose up -d

# Sprawd≈∫ status kontener√≥w
docker-compose ps
```

Aplikacja bƒôdzie dostƒôpna pod adresem: http://localhost:3000

## 3. Konfiguracja Google Maps API

### Wymagane API:
- Maps JavaScript API
- Directions API
- Places API
- Geocoding API

### Kroki konfiguracji:
1. Id≈∫ do [Google Cloud Console](https://console.cloud.google.com/)
2. Utw√≥rz nowy projekt lub wybierz istniejƒÖcy
3. W≈ÇƒÖcz wymagane API w sekcji "APIs & Services"
4. Utw√≥rz credentials (API Key)
5. Skonfiguruj ograniczenia API Key (opcjonalne ale zalecane)
6. Dodaj klucz do pliku `.env`

```env
REACT_APP_GOOGLE_MAPS_API_KEY=AIzaSyB_your_actual_api_key_here
```

## 4. Testowe konta u≈ºytkownik√≥w

### Administrator
- **Login:** `admin`
- **Has≈Ço:** `admin123`
- **Uprawnienia:** Pe≈Çny dostƒôp

### Operator
- **Login:** `operator`
- **Has≈Ço:** `operator123`
- **Uprawnienia:** Monitoring transport√≥w

### Planista
- **Login:** `planner`
- **Has≈Ço:** `planner123`
- **Uprawnienia:** Planowanie tras

## 5. Podstawowe funkcje

### üó∫Ô∏è Planowanie tras
1. Zaloguj siƒô jako `planner`
2. Przejd≈∫ do zak≈Çadki "Planowanie tras"
3. Wybierz punkt poczƒÖtkowy i docelowy
4. Wybierz zestawy transportowe
5. Kliknij "Generuj trasƒô"

### üìä Panel operatora
1. Zaloguj siƒô jako `operator`
2. Przejd≈∫ do zak≈Çadki "Panel operatora"
3. Monitoruj aktywne transporty na mapie
4. Reaguj na alerty w czasie rzeczywistym

### üìà Dashboard i raporty
1. Zaloguj siƒô jako `admin`
2. Sprawd≈∫ kluczowe metryki na dashboard
3. Generuj raporty w zak≈Çadce "Raporty"
4. Eksportuj dane do PDF/Excel

## 6. RozwiƒÖzywanie problem√≥w

### Problemy z Google Maps
```bash
# Sprawd≈∫ czy API Key jest poprawny
echo $REACT_APP_GOOGLE_MAPS_API_KEY

# Sprawd≈∫ w Developer Tools czy sƒÖ b≈Çƒôdy 403/402
# 403 = nieprawid≈Çowe ograniczenia API
# 402 = przekroczony limit p≈Çatno≈õci
```

### Problemy z instalacjƒÖ
```bash
# Wyczy≈õƒá cache npm
npm cache clean --force

# Usu≈Ñ node_modules i zainstaluj ponownie
rm -rf node_modules package-lock.json
npm install

# Sprawd≈∫ wersjƒô Node.js (wymagana >= 16)
node --version
```

### Problemy z Docker
```bash
# Sprawd≈∫ logi kontener√≥w
docker-compose logs frontend
docker-compose logs backend

# Zrestartuj kontenery
docker-compose restart

# Przebuduj obrazy
docker-compose build --no-cache
```

## 7. Przydatne komendy

```bash
# Development
npm start              # Uruchom dev server
npm test               # Uruchom testy
npm run build          # Build produkcyjny
npm run lint           # Sprawd≈∫ kod (ESLint)
npm run format         # Sformatuj kod (Prettier)

# Docker
docker-compose up -d           # Uruchom w tle
docker-compose down           # Zatrzymaj i usu≈Ñ kontenery
docker-compose logs -f        # Poka≈º logi na ≈ºywo
docker-compose exec frontend sh  # Wejd≈∫ do kontenera

# Testy
npm test                      # Tryb interaktywny
npm run test:coverage        # Z coverage
npm run test:ci              # Jeden przebieg (CI/CD)
```

## 8. Nastƒôpne kroki

Po uruchomieniu aplikacji:

1. **Skonfiguruj dane testowe** - dodaj w≈Çasne transporty i trasy
2. **Przetestuj funkcjonalno≈õci** - sprawd≈∫ planowanie tras i monitoring
3. **Dostosuj ustawienia** - skonfiguruj powiadomienia i preferencje
4. **Przygotuj deployment** - skonfiguruj environment produkcyjny
5. **Przeszkolenie zespo≈Çu** - zapoznaj u≈ºytkownik√≥w z systemem

## üÜò Potrzebujesz pomocy?

- **Dokumentacja:** [README.md](README.md)
- **Issues:** [GitHub Issues](https://github.com/your-org/military-logistics-system/issues)
- **Email:** support@yourdomain.com
- **Slack:** #military-logistics-support

---

**Gratulacje! üéâ**
System Logistyki Militarnej jest gotowy do u≈ºycia. Sprawd≈∫ wszystkie funkcjonalno≈õci i dostosuj system do swoich potrzeb.